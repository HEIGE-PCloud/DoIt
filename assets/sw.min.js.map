{"version":3,"sources":["../src/js/sw.js"],"names":[],"mappings":"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","file":"sw.min.js","sourcesContent":["const CACHE_VERSION = 1;\r\n\r\nconst BASE_CACHE_FILES = [\r\n    '/css/style.min.css',\r\n    '/js/theme.min.js',\r\n    '/site.webmanifest',\r\n];\r\n\r\nconst OFFLINE_CACHE_FILES = [\r\n    '/css/style.min.css',\r\n    '/js/theme.min.js',\r\n    '/site.webmanifest',\r\n    '/offline',\r\n];\r\n\r\nconst NOT_FOUND_CACHE_FILES = [\r\n    '/css/style.min.css',\r\n    '/js/theme.min.js',\r\n    '/site.webmanifest',\r\n    '/404.html',\r\n];\r\n\r\nconst OFFLINE_PAGE = '/offline';\r\nconst NOT_FOUND_PAGE = '/404.html';\r\n\r\nconst CACHE_VERSIONS = {\r\n    assets: 'assets-v' + CACHE_VERSION,\r\n    content: 'content-v' + CACHE_VERSION,\r\n    offline: 'offline-v' + CACHE_VERSION,\r\n    notFound: '404-v' + CACHE_VERSION,\r\n};\r\n\r\n// Define MAX_TTL's in SECONDS for specific file extensions\r\nconst MAX_TTL = {\r\n    '/': 3600,\r\n    html: 3600,\r\n    json: 86400,\r\n    js: 86400,\r\n    css: 86400,\r\n};\r\n\r\nconst CACHE_BLACKLIST = [\r\n    (str) => {\r\n       return !str.startsWith('http://localhost');\r\n    },\r\n];\r\n\r\nconst SUPPORTED_METHODS = [\r\n    'GET',\r\n];\r\n\r\n/**\r\n * isBlackListed\r\n * @param {string} url\r\n * @returns {boolean}\r\n */\r\nfunction isBlacklisted(url) {\r\n    return (CACHE_BLACKLIST.length > 0) ? !CACHE_BLACKLIST.filter((rule) => {\r\n        if (typeof rule === 'function') {\r\n            return !rule(url);\r\n        } else {\r\n            return false;\r\n        }\r\n    }).length : false\r\n}\r\n\r\n/**\r\n * getFileExtension\r\n * @param {string} url\r\n * @returns {string}\r\n */\r\nfunction getFileExtension(url) {\r\n    let extension = url.split('.').reverse()[0].split('?')[0];\r\n    return (extension.endsWith('/')) ? '/' : extension;\r\n}\r\n\r\n/**\r\n * getTTL\r\n * @param {string} url\r\n */\r\nfunction getTTL(url) {\r\n    if (typeof url === 'string') {\r\n        let extension = getFileExtension(url);\r\n        if (typeof MAX_TTL[extension] === 'number') {\r\n            return MAX_TTL[extension];\r\n        } else {\r\n            return null;\r\n        }\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * installServiceWorker\r\n * @returns {Promise}\r\n */\r\nfunction installServiceWorker() {\r\n    return Promise.all(\r\n        [\r\n            caches.open(CACHE_VERSIONS.assets)\r\n                .then(\r\n                    (cache) => {\r\n                        return cache.addAll(BASE_CACHE_FILES);\r\n                    }\r\n                ),\r\n            caches.open(CACHE_VERSIONS.offline)\r\n                .then(\r\n                    (cache) => {\r\n                        return cache.addAll(OFFLINE_CACHE_FILES);\r\n                    }\r\n                ),\r\n            caches.open(CACHE_VERSIONS.notFound)\r\n                .then(\r\n                    (cache) => {\r\n                        return cache.addAll(NOT_FOUND_CACHE_FILES);\r\n                    }\r\n                )\r\n        ]\r\n    )\r\n        .then(() => {\r\n            return self.skipWaiting();\r\n        });\r\n}\r\n\r\n/**\r\n * cleanupLegacyCache\r\n * @returns {Promise}\r\n */\r\nfunction cleanupLegacyCache() {\r\n\r\n    let currentCaches = Object.keys(CACHE_VERSIONS)\r\n        .map(\r\n            (key) => {\r\n                return CACHE_VERSIONS[key];\r\n            }\r\n        );\r\n\r\n    return new Promise(\r\n        (resolve, reject) => {\r\n\r\n            caches.keys()\r\n                .then(\r\n                    (keys) => {\r\n                        return legacyKeys = keys.filter(\r\n                            (key) => {\r\n                                return !~currentCaches.indexOf(key);\r\n                            }\r\n                        );\r\n                    }\r\n                )\r\n                .then(\r\n                    (legacy) => {\r\n                        if (legacy.length) {\r\n                            Promise.all(\r\n                                legacy.map(\r\n                                    (legacyKey) => {\r\n                                        return caches.delete(legacyKey)\r\n                                    }\r\n                                )\r\n                            )\r\n                                .then(\r\n                                    () => {\r\n                                        resolve()\r\n                                    }\r\n                                )\r\n                                .catch(\r\n                                    (err) => {\r\n                                        reject(err);\r\n                                    }\r\n                                );\r\n                        } else {\r\n                            resolve();\r\n                        }\r\n                    }\r\n                )\r\n                .catch(\r\n                    () => {\r\n                        reject();\r\n                    }\r\n                );\r\n        }\r\n    );\r\n}\r\n\r\nself.addEventListener(\r\n    'install', event => {\r\n        event.waitUntil(\r\n            Promise.all([\r\n                installServiceWorker(),\r\n                self.skipWaiting(),\r\n            ])\r\n        );\r\n    }\r\n);\r\n\r\n// The activate handler takes care of cleaning up old caches.\r\nself.addEventListener(\r\n    'activate', event => {\r\n        event.waitUntil(\r\n            Promise.all(\r\n                [\r\n                    cleanupLegacyCache(),\r\n                    self.clients.claim(),\r\n                    self.skipWaiting(),\r\n                ]\r\n            )\r\n                .catch(\r\n                    (err) => {\r\n                        self.skipWaiting();\r\n                    }\r\n                )\r\n        );\r\n    }\r\n);\r\n\r\nself.addEventListener(\r\n    'fetch', event => {\r\n\r\n        event.respondWith(\r\n            caches.open(CACHE_VERSIONS.content)\r\n                .then(\r\n                    (cache) => {\r\n\r\n                        return cache.match(event.request)\r\n                            .then(\r\n                                (response) => {\r\n\r\n                                    if (response) {\r\n\r\n                                        let headers = response.headers.entries();\r\n                                        let date = null;\r\n\r\n                                        for (let pair of headers) {\r\n                                            if (pair[0] === 'date') {\r\n                                                date = new Date(pair[1]);\r\n                                            }\r\n                                        }\r\n                                        if (date) {\r\n                                            let age = parseInt((new Date().getTime() - date.getTime()) / 1000);\r\n                                            let ttl = getTTL(event.request.url);\r\n\r\n                                            if (ttl && age > ttl) {\r\n\r\n                                                return new Promise(\r\n                                                    (resolve) => {\r\n\r\n                                                        return fetch(event.request.clone())\r\n                                                            .then(\r\n                                                                (updatedResponse) => {\r\n                                                                    if (updatedResponse) {\r\n                                                                        cache.put(event.request, updatedResponse.clone());\r\n                                                                        resolve(updatedResponse);\r\n                                                                    } else {\r\n                                                                        resolve(response)\r\n                                                                    }\r\n                                                                }\r\n                                                            )\r\n                                                            .catch(\r\n                                                                () => {\r\n                                                                    resolve(response);\r\n                                                                }\r\n                                                            );\r\n                                                    }\r\n                                                )\r\n                                                    .catch(\r\n                                                        (err) => {\r\n                                                            return response;\r\n                                                        }\r\n                                                    );\r\n                                            } else {\r\n                                                return response;\r\n                                            }\r\n\r\n                                        } else {\r\n                                            return response;\r\n                                        }\r\n\r\n                                    } else {\r\n                                        return null;\r\n                                    }\r\n                                }\r\n                            )\r\n                            .then(\r\n                                (response) => {\r\n                                    if (response) {\r\n                                        return response;\r\n                                    } else {\r\n                                        return fetch(event.request.clone())\r\n                                            .then(\r\n                                                (response) => {\r\n\r\n                                                    if (response.status < 400) {\r\n                                                        if (~SUPPORTED_METHODS.indexOf(event.request.method) && !isBlacklisted(event.request.url) && event.request.url.slice(0, 4) === 'http') {\r\n                                                            cache.put(event.request, response.clone());\r\n                                                        }\r\n                                                        return response;\r\n                                                    } else {\r\n                                                        return caches.open(CACHE_VERSIONS.notFound).then((cache) => {\r\n                                                            return cache.match(NOT_FOUND_PAGE);\r\n                                                        })\r\n                                                    }\r\n                                                }\r\n                                            )\r\n                                            .then((response) => {\r\n                                                if (response) {\r\n                                                    return response;\r\n                                                }\r\n                                            })\r\n                                            .catch(\r\n                                                () => {\r\n\r\n                                                    return caches.open(CACHE_VERSIONS.offline)\r\n                                                        .then(\r\n                                                            (offlineCache) => {\r\n                                                                return offlineCache.match(OFFLINE_PAGE)\r\n                                                            }\r\n                                                        )\r\n                                                }\r\n                                            );\r\n                                    }\r\n                                }\r\n                            )\r\n                            .catch(\r\n                                (error) => {\r\n                                    console.error('  Error in fetch handler:', error);\r\n                                    throw error;\r\n                                }\r\n                            );\r\n                    }\r\n                )\r\n        );\r\n\r\n    }\r\n);\r\n"]}