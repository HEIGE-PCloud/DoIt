{"version":3,"sources":["../src/js/sw.js"],"names":[],"mappings":"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","file":"sw.min.js","sourcesContent":["const CACHE_VERSION = 1\n\nconst BASE_CACHE_FILES = [\n  '/css/style.min.css',\n  '/js/theme.min.js',\n  '/site.webmanifest'\n]\n\nconst OFFLINE_CACHE_FILES = [\n  '/css/style.min.css',\n  '/js/theme.min.js',\n  '/site.webmanifest',\n  '/offline'\n]\n\nconst NOT_FOUND_CACHE_FILES = [\n  '/css/style.min.css',\n  '/js/theme.min.js',\n  '/site.webmanifest',\n  '/404.html'\n]\n\nconst OFFLINE_PAGE = '/offline'\nconst NOT_FOUND_PAGE = '/404.html'\n\nconst CACHE_VERSIONS = {\n  assets: 'assets-v' + CACHE_VERSION,\n  content: 'content-v' + CACHE_VERSION,\n  offline: 'offline-v' + CACHE_VERSION,\n  notFound: '404-v' + CACHE_VERSION\n}\n\n// Define MAX_TTL's in SECONDS for specific file extensions\nconst MAX_TTL = {\n  '/': 3600,\n  html: 3600,\n  json: 86400,\n  js: 86400,\n  css: 86400\n}\n\nconst CACHE_BLACKLIST = [\n  (str) => {\n    return !str.startsWith('http://localhost')\n  }\n]\n\nconst SUPPORTED_METHODS = [\n  'GET'\n]\n\n/**\n * isBlackListed\n * @param {string} url\n * @returns {boolean}\n */\nfunction isBlacklisted (url) {\n  return (CACHE_BLACKLIST.length > 0)\n    ? !CACHE_BLACKLIST.filter((rule) => {\n        if (typeof rule === 'function') {\n          return !rule(url)\n        } else {\n          return false\n        }\n      }).length\n    : false\n}\n\n/**\n * getFileExtension\n * @param {string} url\n * @returns {string}\n */\nfunction getFileExtension (url) {\n  const extension = url.split('.').reverse()[0].split('?')[0]\n  return (extension.endsWith('/')) ? '/' : extension\n}\n\n/**\n * getTTL\n * @param {string} url\n */\nfunction getTTL (url) {\n  if (typeof url === 'string') {\n    const extension = getFileExtension(url)\n    if (typeof MAX_TTL[extension] === 'number') {\n      return MAX_TTL[extension]\n    } else {\n      return null\n    }\n  } else {\n    return null\n  }\n}\n\n/**\n * installServiceWorker\n * @returns {Promise}\n */\nfunction installServiceWorker () {\n  return Promise.all(\n    [\n      caches.open(CACHE_VERSIONS.assets)\n        .then(\n          (cache) => {\n            return cache.addAll(BASE_CACHE_FILES)\n          }\n        ),\n      caches.open(CACHE_VERSIONS.offline)\n        .then(\n          (cache) => {\n            return cache.addAll(OFFLINE_CACHE_FILES)\n          }\n        ),\n      caches.open(CACHE_VERSIONS.notFound)\n        .then(\n          (cache) => {\n            return cache.addAll(NOT_FOUND_CACHE_FILES)\n          }\n        )\n    ]\n  )\n    .then(() => {\n      return self.skipWaiting()\n    })\n}\n\n/**\n * cleanupLegacyCache\n * @returns {Promise}\n */\nfunction cleanupLegacyCache () {\n  const currentCaches = Object.keys(CACHE_VERSIONS)\n    .map(\n      (key) => {\n        return CACHE_VERSIONS[key]\n      }\n    )\n\n  return new Promise(\n    (resolve, reject) => {\n      caches.keys()\n        .then(\n          (keys) => {\n            return keys.filter(\n              (key) => {\n                return !~currentCaches.indexOf(key)\n              }\n            )\n          }\n        )\n        .then(\n          (legacy) => {\n            if (legacy.length) {\n              Promise.all(\n                legacy.map(\n                  (legacyKey) => {\n                    return caches.delete(legacyKey)\n                  }\n                )\n              )\n                .then(\n                  () => {\n                    resolve()\n                  }\n                )\n                .catch(\n                  (err) => {\n                    reject(err)\n                  }\n                )\n            } else {\n              resolve()\n            }\n          }\n        )\n        .catch(\n          (err) => {\n            reject(err)\n          }\n        )\n    }\n  )\n}\n\nself.addEventListener(\n  'install', event => {\n    event.waitUntil(\n      Promise.all([\n        installServiceWorker(),\n        self.skipWaiting()\n      ])\n    )\n  }\n)\n\n// The activate handler takes care of cleaning up old caches.\nself.addEventListener(\n  'activate', event => {\n    event.waitUntil(\n      Promise.all(\n        [\n          cleanupLegacyCache(),\n          self.clients.claim(),\n          self.skipWaiting()\n        ]\n      )\n        .catch(\n          (err) => {\n            console.log(err)\n            self.skipWaiting()\n          }\n        )\n    )\n  }\n)\n\nself.addEventListener(\n  'fetch', event => {\n    event.respondWith(\n      caches.open(CACHE_VERSIONS.content)\n        .then(\n          (cache) => {\n            return cache.match(event.request)\n              .then(\n                (response) => {\n                  if (response) {\n                    const headers = response.headers.entries()\n                    let date = null\n\n                    for (const pair of headers) {\n                      if (pair[0] === 'date') {\n                        date = new Date(pair[1])\n                      }\n                    }\n                    if (date) {\n                      const age = parseInt((new Date().getTime() - date.getTime()) / 1000)\n                      const ttl = getTTL(event.request.url)\n\n                      if (ttl && age > ttl) {\n                        return new Promise(\n                          (resolve) => {\n                            return fetch(event.request.clone())\n                              .then(\n                                (updatedResponse) => {\n                                  if (updatedResponse) {\n                                    cache.put(event.request, updatedResponse.clone())\n                                    resolve(updatedResponse)\n                                  } else {\n                                    resolve(response)\n                                  }\n                                }\n                              )\n                              .catch(\n                                () => {\n                                  resolve(response)\n                                }\n                              )\n                          }\n                        )\n                          .catch(\n                            (err) => {\n                              console.log(err)\n                              return response\n                            }\n                          )\n                      } else {\n                        return response\n                      }\n                    } else {\n                      return response\n                    }\n                  } else {\n                    return null\n                  }\n                }\n              )\n              .then(\n                (response) => {\n                  if (response) {\n                    return response\n                  } else {\n                    return fetch(event.request.clone())\n                      .then(\n                        (response) => {\n                          if (response.status < 400) {\n                            if (~SUPPORTED_METHODS.indexOf(event.request.method) && !isBlacklisted(event.request.url) && event.request.url.slice(0, 4) === 'http') {\n                              cache.put(event.request, response.clone())\n                            }\n                            return response\n                          } else {\n                            return caches.open(CACHE_VERSIONS.notFound).then((cache) => {\n                              return cache.match(NOT_FOUND_PAGE)\n                            })\n                          }\n                        }\n                      )\n                      .then((response) => {\n                        if (response) {\n                          return response\n                        }\n                      })\n                      .catch(\n                        () => {\n                          return caches.open(CACHE_VERSIONS.offline)\n                            .then(\n                              (offlineCache) => {\n                                return offlineCache.match(OFFLINE_PAGE)\n                              }\n                            )\n                        }\n                      )\n                  }\n                }\n              )\n              .catch(\n                (error) => {\n                  console.error('  Error in fetch handler:', error)\n                  throw error\n                }\n              )\n          }\n        )\n    )\n  }\n)\n"]}