{"version":3,"file":"pjax.min.js","sources":["source://Pjax/utils/switchNodes.ts","source://Pjax/switchDOM.ts","source://Pjax/libs/executeScripts/index.ts","source://Pjax/preparePage.ts","source://Pjax/weakLoad.ts","source://Pjax/libs/LazyHistory/index.ts","source://Pjax/utils/Switches.ts","source://Pjax/libs/Submission/index.ts","source://Pjax/utils/DefaultTrigger.ts","source://Pjax/libs/executeScripts/Script.ts","source://Pjax/index.ts"],"sourcesContent":["import type * as Pjax from '..';\n\nimport Switches from './Switches';\n\nexport default async function switchNodes(sourceDocument: Document, {\n  selectors,\n  switches,\n  signal = null,\n}: {\n  selectors: Pjax.Options['selectors'];\n  switches: Pjax.Options['switches'];\n  signal?: AbortSignal | null;\n}): Promise<Pjax.SwitchesResult> {\n  if (signal?.aborted) throw new DOMException('Aborted switches', 'AbortError');\n\n  let focusCleared = false;\n  const switchPromises: Promise<void>[] = [];\n\n  selectors.forEach((selector) => {\n    const sourceNodeList = sourceDocument.querySelectorAll(selector);\n    const targetNodeList = document.querySelectorAll(selector);\n\n    // Throw when the structure is not match.\n    if (sourceNodeList.length !== targetNodeList.length) {\n      throw new DOMException(\n        `Selector '${selector}' does not select the same amount of nodes`,\n        'IndexSizeError',\n      );\n    }\n\n    const { activeElement } = document;\n\n    // Start switching for each match.\n    targetNodeList.forEach((targetNode, index) => {\n      // Clear out focused controls before switching.\n      if (!focusCleared && activeElement && targetNode.contains(activeElement)) {\n        if (activeElement instanceof HTMLElement || activeElement instanceof SVGElement) {\n          activeElement.blur();\n        }\n        focusCleared = true;\n      }\n\n      // Argument defined switch is prior to default switch.\n      const targetSwitch: Pjax.Switch = switches?.[selector] || Switches.default;\n\n      // Start switching. Package to promise. Ignore switch errors.\n      const switchPromise = Promise.resolve()\n        .then(() => targetSwitch(targetNode, sourceNodeList[index]))\n        .catch(() => {});\n      switchPromises.push(switchPromise);\n    });\n  });\n\n  // Reject as soon as possible on abort.\n  await Promise.race([\n    Promise.all(switchPromises),\n    new Promise((resolve, reject) => {\n      signal?.addEventListener('abort', () => {\n        reject(new DOMException('Aborted switches', 'AbortError'));\n      });\n    }),\n  ]);\n\n  return {\n    focusCleared,\n  };\n}\n","import type Pjax from '.';\nimport type { Options, EventDetail } from '.';\nimport switchNodes from './utils/switchNodes';\n\nexport default async function switchDOM(\n  this: Pjax,\n  requestInfo: RequestInfo,\n  overrideOptions: Partial<Options> = {},\n): Promise<void> {\n  const {\n    selectors,\n    switches,\n    cache,\n    timeout,\n    hooks,\n  } = { ...this.options, ...overrideOptions };\n\n  const eventDetail: EventDetail = {};\n\n  const signal = this.abortController?.signal || null;\n  eventDetail.signal = signal;\n\n  /**\n   * Specify request cache mode and abort signal.\n   */\n  const requestInit: RequestInit = { cache, signal };\n\n  /**\n   * Specify original referrer and referrerPolicy\n   * since the later Request constructor steps discard the original ones.\n   * @see [Request constructor steps | Fetch Standard]{@link https://fetch.spec.whatwg.org/#dom-request}\n   */\n  if (requestInfo instanceof Request) {\n    requestInit.referrer = requestInfo.referrer;\n    requestInit.referrerPolicy = requestInfo.referrerPolicy;\n  }\n\n  const rawRequest = new Request(requestInfo, requestInit);\n  rawRequest.headers.set('X-Requested-With', 'Fetch');\n  rawRequest.headers.set('X-Pjax', 'true');\n  rawRequest.headers.set('X-Pjax-Selectors', JSON.stringify(selectors));\n\n  const request = await hooks.request?.(rawRequest) || rawRequest;\n  eventDetail.request = request;\n\n  // Set timeout.\n  eventDetail.timeout = timeout;\n  let timeoutID: number | undefined;\n  if (timeout > 0) {\n    timeoutID = window.setTimeout(() => {\n      this.abortController?.abort();\n    }, timeout);\n    eventDetail.timeoutID = timeoutID;\n  }\n\n  this.fire('send', eventDetail);\n\n  try {\n    const rawResponse = await fetch(request)\n      .finally(() => {\n        window.clearTimeout(timeoutID);\n      });\n\n    const response = await hooks.response?.(rawResponse) || rawResponse;\n    eventDetail.response = response;\n\n    this.fire('receive', eventDetail);\n\n    // Push history state. Preserve hash as the fetch discards it.\n    const newLocation = new URL(response.url);\n    newLocation.hash = new URL(request.url).hash;\n    if (window.location.href !== newLocation.href) {\n      window.history.pushState(null, '', newLocation.href);\n    }\n\n    // Switch elements.\n    const rawDocument = new DOMParser().parseFromString(await response.text(), 'text/html');\n    const document = await hooks.document?.(rawDocument) || rawDocument;\n\n    eventDetail.switches = switches;\n    const rawSwitchesResult = await switchNodes(document, { selectors, switches, signal });\n\n    const switchesResult = await hooks.switchesResult?.(rawSwitchesResult) || rawSwitchesResult;\n    eventDetail.switchesResult = switchesResult;\n\n    // Simulate initial page load.\n    await this.preparePage(switchesResult, overrideOptions);\n  } catch (error) {\n    eventDetail.error = error;\n    this.fire('error', eventDetail);\n    throw error;\n  } finally {\n    this.fire('complete', eventDetail);\n  }\n\n  this.fire('success', eventDetail);\n}\n","import Script from './Script';\n\nclass Executor {\n  declare signal: AbortSignal | null;\n\n  constructor(signal: AbortSignal | null) {\n    this.signal = signal;\n  }\n\n  /**\n   * Execute script.\n   * Throw only when aborted.\n   * Wait only for blocking script.\n   */\n  async exec(script: Script) {\n    if (this.signal?.aborted) throw new DOMException('Execution aborted', 'AbortError');\n    const evalPromise = script.eval().catch(() => {});\n    if (script.blocking) await evalPromise;\n  }\n}\n\n/**\n * Find and execute scripts in order.\n * Needed since innerHTML does not run scripts.\n */\nexport default async function executeScripts(\n  scriptEleList: Iterable<HTMLScriptElement>,\n  { signal = null }: { signal?: AbortSignal | null } = {},\n): Promise<void> {\n  if (signal?.aborted) throw new DOMException('Aborted execution', 'AbortError');\n\n  const validScripts = Array.from(scriptEleList, (scriptEle) => new Script(scriptEle))\n    .filter((script) => script.evaluable);\n\n  const executor = new Executor(signal);\n\n  // Evaluate external scripts first\n  // to help browsers fetch them in parallel.\n  // Each inline blocking script will be evaluated as soon as\n  // all its previous blocking scripts are executed.\n  const execution = validScripts.reduce((promise: Promise<unknown>, script) => {\n    if (script.external) {\n      return Promise.all([promise, executor.exec(script)]);\n    }\n    return promise.then(() => executor.exec(script));\n  }, Promise.resolve());\n\n  // Reject as soon as possible on abort.\n  await Promise.race([\n    execution,\n    new Promise((resolve, reject) => {\n      signal?.addEventListener('abort', () => {\n        reject(new DOMException('Aborted execution', 'AbortError'));\n      });\n    }),\n  ]);\n}\n","import type Pjax from '.';\nimport type { Options, SwitchesResult } from '.';\n\nimport executeScripts from './libs/executeScripts';\n\n/**\n * Get the indicated part of the document.\n * Not using :target pseudo class here as it may not be updated by pushState.\n * @see [The indicated part of the document | HTML Standard]{@link https://html.spec.whatwg.org/multipage/browsing-the-web.html#the-indicated-part-of-the-document}\n */\nconst getIndicatedPart = () => {\n  let target: Element | null = null;\n  const hashId = decodeURIComponent(window.location.hash.slice(1));\n  if (hashId) target = document.getElementById(hashId) || document.getElementsByName(hashId)[0];\n  if (!target && (!hashId || hashId.toLowerCase() === 'top')) target = document.scrollingElement;\n  return target;\n};\n\n/**\n * After page elements are updated.\n */\nexport default async function preparePage(\n  this: Pjax,\n  switchesResult: SwitchesResult | null,\n  overrideOptions: Partial<Options> = {},\n): Promise<void> {\n  const options = { ...this.options, ...overrideOptions };\n\n  // If page elements are switched.\n  if (switchesResult) {\n    // Focus the FIRST autofocus if the previous focus is cleared.\n    // https://html.spec.whatwg.org/multipage/interaction.html#the-autofocus-attribute\n    if (switchesResult.focusCleared) {\n      const autofocus = document.querySelectorAll('[autofocus]')[0];\n      if (autofocus instanceof HTMLElement || autofocus instanceof SVGElement) {\n        autofocus.focus();\n      }\n    }\n\n    // List newly added and labeled scripts.\n    const scripts: HTMLScriptElement[] = [];\n    if (options.scripts) {\n      document.querySelectorAll(options.scripts).forEach((element) => {\n        if (element instanceof HTMLScriptElement) scripts.push(element);\n      });\n    }\n    options.selectors.forEach((selector) => {\n      document.querySelectorAll(selector).forEach((element) => {\n        if (element instanceof HTMLScriptElement) {\n          scripts.push(element);\n        } else {\n          element.querySelectorAll('script').forEach((script) => {\n            if (scripts.includes(script)) return;\n            scripts.push(script);\n          });\n        }\n      });\n    });\n\n    // Sort in document order.\n    // https://stackoverflow.com/a/22613028\n    scripts.sort((a, b) => (\n      // Bitwise AND operator is required here.\n      // eslint-disable-next-line no-bitwise\n      a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_PRECEDING || -1\n    ));\n\n    // Execute.\n    await executeScripts(scripts, { signal: this.abortController?.signal || null });\n  }\n\n  // Parse required scroll position.\n  const { scrollTo } = options;\n\n  // When scroll is allowed.\n  if (scrollTo !== false) {\n    // If switched, default to left top. Otherwise, default to no scroll.\n    let parsedScrollTo: [number, number] | false = switchesResult ? [0, 0] : false;\n\n    if (Array.isArray(scrollTo)) {\n      parsedScrollTo = scrollTo;\n    } else if (typeof scrollTo === 'number') {\n      parsedScrollTo = [window.scrollX, scrollTo];\n    } else {\n      const target = getIndicatedPart();\n\n      if (target) {\n        target.scrollIntoView();\n        parsedScrollTo = false;\n      }\n    }\n\n    // Scroll.\n    if (parsedScrollTo) window.scrollTo(parsedScrollTo[0], parsedScrollTo[1]);\n  }\n}\n","import type Pjax from '.';\nimport type { Options } from '.';\n\n/**\n * Load a URL in Pjax way. Throw all errors.\n */\nexport default async function weakLoad(\n  this: Pjax,\n  requestInfo: RequestInfo,\n  overrideOptions: Partial<Options> = {},\n): Promise<void> {\n  // Store scroll position.\n  this.storeHistory();\n\n  // Setup abort controller.\n  const abortController = new AbortController();\n  this.abortController?.abort();\n  this.abortController = abortController;\n\n  /**\n   * The URL object of the target resource.\n   * Used to identify fragment navigations.\n   */\n  const url = new URL(typeof requestInfo === 'string' ? requestInfo : requestInfo.url, document.baseURI);\n  const path = url.pathname + url.search;\n  const currentPath = this.location.pathname + this.location.search;\n\n  /**\n   * Identify fragment navigations.\n   * Not using `.hash` here as it becomes the empty string for both empty and null fragment.\n   * @see [Navigate fragment step | HTML Standard]{@link https://html.spec.whatwg.org/multipage/browsing-the-web.html#navigate-fragid-step}\n   * @see [URL hash getter | URL Standard]{@link https://url.spec.whatwg.org/#dom-url-hash}\n   */\n  if (path === currentPath && url.href.includes('#')) {\n    // pushState on different hash.\n    if (window.location.hash !== url.hash) {\n      window.history.pushState(null, '', url.href);\n    }\n\n    // Directly prepare for fragment navigation.\n    await this.preparePage(null, overrideOptions);\n  } else {\n    // Switch DOM for normal navigation.\n    await this.switchDOM(requestInfo, overrideOptions);\n  }\n\n  // Update Pjax location and prepare the page.\n  this.history.pull();\n  this.location.href = window.location.href;\n\n  // Finish, remove abort controller.\n  this.abortController = null;\n}\n","/**\n * Lazy Session History API\n * ===\n * Access the associated data of a history entry even after user navigations.\n *\n * On page navigation events (like popstate), `window.history.state` has already been changed and\n * we can't update the previous state anymore. To leave a last mark on the leaving page, we have to\n * either keep updating the state continuously - which usually causes performance issues,\n * or make use of other API.\n *\n * Internally, this module uses **session storage** to store data, and uses browsers' original\n * history state as keys to identify session storage items.\n */\n\n/**\n * A valid history state object.\n */\nexport interface HistoryState {\n  [name: string]: unknown;\n}\n\nclass LazyHistory<State> {\n  /**\n   * The index of current state.\n   */\n  declare private index: number;\n\n  /**\n   * The key used in `window.history.state` and session storage.\n   */\n  declare key: string;\n\n  /**\n   * The current state.\n   */\n  declare state: State | null;\n\n  constructor(key: string) {\n    this.key = key;\n\n    this.pull();\n  }\n\n  /**\n   * Keep up with current browser history entry.\n   */\n  pull(): void {\n    // Get new state index.\n    const historyState = window.history.state as HistoryState | null;\n    const pulledIndex = historyState?.[this.key] as number | undefined;\n\n    // Return if up-to-date.\n    if (pulledIndex !== undefined && this.index === pulledIndex) return;\n\n    // Get stored states.\n    const stateListStr = window.sessionStorage.getItem(this.key);\n    const stateList = stateListStr ? JSON.parse(stateListStr) as (State | null)[] : [];\n\n    // Store current state.\n    stateList[this.index] = this.state;\n    window.sessionStorage.setItem(this.key, JSON.stringify(stateList));\n\n    if (pulledIndex === undefined) {\n      this.index = stateList.length;\n      this.state = null;\n      window.history.replaceState({\n        ...historyState,\n        [this.key]: this.index,\n      }, document.title);\n    } else {\n      this.index = pulledIndex;\n      this.state = stateListStr ? stateList[pulledIndex] : null;\n    }\n  }\n}\n\nexport default LazyHistory;\n","import type * as Pjax from '..';\n\n/**\n * Replace HTML contents by using innerHTML.\n */\nconst innerHTML: Pjax.Switch = (oldNode, newNode) => {\n  // eslint-disable-next-line no-param-reassign\n  oldNode.innerHTML = newNode.innerHTML;\n};\n\n/**\n * Replace all text by using textContent.\n */\nconst textContent: Pjax.Switch = (oldNode, newNode) => {\n  // eslint-disable-next-line no-param-reassign\n  oldNode.textContent = newNode.textContent;\n};\n\n/**\n * Replace readable text by using innerText.\n */\nconst innerText: Pjax.Switch<HTMLElement> = (oldEle, newEle) => {\n  // eslint-disable-next-line no-param-reassign\n  oldEle.innerText = newEle.innerText;\n};\n\n/**\n * Rewrite all attributes.\n */\nconst attributes: Pjax.Switch = (oldEle, newEle) => {\n  let existingNames = oldEle.getAttributeNames();\n  const targetNames = newEle.getAttributeNames();\n  targetNames.forEach((target) => {\n    oldEle.setAttribute(target, newEle.getAttribute(target) || '');\n    existingNames = existingNames.filter((existing) => existing !== target);\n  });\n  existingNames.forEach((existing) => {\n    oldEle.removeAttribute(existing);\n  });\n};\n\n/**\n * Replace the whole element by using replaceWith.\n */\nconst replaceWith: Pjax.Switch = (oldNode, newNode) => {\n  oldNode.replaceWith(newNode);\n};\n\nconst Switches = {\n  default: replaceWith,\n  innerHTML,\n  textContent,\n  innerText,\n  attributes,\n  replaceWith,\n};\n\nexport default Switches;\n","const capitalize = <T extends string>(str: T) => (\n  `${str.charAt(0).toUpperCase()}${str.slice(1)}` as Capitalize<T>\n);\n\ntype FormContentAttributeNames = 'action' | 'enctype' | 'method' | 'target';\n\n/**\n * A submit button must be a <button> or an <input type=\"submit\">.\n * HTML Standard didn't state this directly, but we can still tell this by reading\n * through the elements and functions that can trigger a submission in the standard.\n *\n * There is also a proposal WIP to make every element a possible submitter button.\n * We type it for type checks. May need changes when the proposal get implemented.\n *\n * @see [Concept submit button | HTML Standard]{@link https://html.spec.whatwg.org/multipage/forms.html#concept-submit-button}\n * @see [Form-associated custom elements: being a submit button · Issue #814 · WICG/webcomponents]{@link https://github.com/WICG/webcomponents/issues/814}\n */\nexport type SubmitButton = HTMLButtonElement | HTMLInputElement;\n\nexport default class Submission {\n  declare form: HTMLFormElement;\n\n  declare submitButton: SubmitButton | null;\n\n  /**\n   * Parse the basic facilities that will be frequently used in the submission.\n   * @see [Form submission algorithm | HTML Standard]{@link https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#form-submission-algorithm}\n   */\n  constructor(form: HTMLFormElement, submitter: SubmitButton | null) {\n    this.form = form;\n    this.submitButton = submitter;\n  }\n\n  /**\n   * Parse submission related content attributes.\n   * @see [Form submission attributes | HTML Standard]{@link https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#form-submission-attributes}\n   */\n  getAttribute(name: FormContentAttributeNames): string {\n    const { submitButton, form } = this;\n\n    /**\n     * Some attributes from the submit button override the form's one.\n     * Before reading the IDL value, do a hasAttribute check since the IDL may return\n     * a value (usually the default) even when the related content attribute is not present.\n     */\n    if (submitButton && submitButton.hasAttribute(`form${name}`)) {\n      const overrideValue = submitButton[`form${capitalize(name)}`];\n      if (overrideValue) return overrideValue;\n    }\n    return form[name];\n  }\n\n  /**\n   * Construct the entry list and return in FormData format.\n   * Manually append submitter entry before we can directly specify the submitter button.\n   * The manual way has the limitation that the submitter entry always comes last.\n   * @see [Constructing the entry list | HTML Standard]{@link https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#constructing-form-data-set}\n   * @see [FormData: Add ability to specify submitter in addition to &lt;form&gt; · whatwg/xhr]{@link https://github.com/whatwg/xhr/issues/262}\n   */\n  getEntryList(): FormData {\n    const { form, submitButton } = this;\n    const formData = new FormData(form);\n    if (submitButton && !submitButton.disabled && submitButton.name) {\n      formData.append(submitButton.name, submitButton.value);\n    }\n    return formData;\n  }\n\n  /**\n   * The application/x-www-form-urlencoded and text/plain encoding algorithms\n   * take a list of name-value pairs, where the values must be strings,\n   * rather than an entry list where the value can be a File.\n   * @see [Converting an entry list to a list of name-value pairs | HTML Standard]{@link https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs}\n   */\n  private getNameValuePairs(): [string, string][] {\n    return Array.from(\n      this.getEntryList(),\n      ([key, value]) => (\n        [key, value instanceof File ? value.name : value]\n      ),\n    );\n  }\n\n  /**\n   * URLSearchParams is a native API that\n   * uses the application/x-www-form-urlencoded format and encoding algorithm.\n   * @see [URLSearchParams class | URL Standard]{@link https://url.spec.whatwg.org/#interface-urlsearchparams}\n   */\n  private getURLSearchParams(): URLSearchParams {\n    return new URLSearchParams(this.getNameValuePairs());\n  }\n\n  /**\n   * text/plain encoding algorithm for plain text form data.\n   * @see [text/plain encoding algorithm | HTML Standard]{@link https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#text/plain-encoding-algorithm}\n   */\n  private getTextPlain(): string {\n    return this.getNameValuePairs()\n      .reduce(\n        (str, [key, value]) => `${str}${key}=${value}\\r\\n`,\n        '',\n      );\n  }\n\n  /**\n   * Get the request to be sent by this submission.\n   * @see [Form submission algorithm | HTML Standard]{@link https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#form-submission-algorithm}\n   */\n  getRequestInfo(): RequestInfo | null {\n    const action = this.getAttribute('action');\n    const actionURL = new URL(action, document.baseURI);\n\n    // Only 'http' and 'https' schemes are supported.\n    if (!/^https?:$/.test(actionURL.protocol)) return null;\n\n    switch (this.getAttribute('method')) {\n      /**\n       * Mutate action URL.\n       * @see [Mutate action URL | HTML Standard]{@link https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#submit-mutate-action}\n       */\n      case 'get': {\n        actionURL.search = this.getURLSearchParams().toString();\n\n        return actionURL.href;\n      }\n\n      /**\n       * Submit as entity body.\n       * @see [Submit as entity body | HTML Standard]{@link https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#submit-body}\n       */\n      case 'post': {\n        let body: BodyInit;\n\n        switch (this.getAttribute('enctype')) {\n          case 'application/x-www-form-urlencoded':\n            body = this.getURLSearchParams();\n            break;\n          case 'multipart/form-data':\n            body = this.getEntryList();\n            break;\n          case 'text/plain':\n            body = this.getTextPlain();\n            break;\n          default:\n            return null;\n        }\n\n        return new Request(action, {\n          method: 'POST',\n          body,\n        });\n      }\n\n      /**\n       * Method with no request to send ('dialog' method) or unsupported.\n       */\n      default:\n        return null;\n    }\n  }\n}\n","import type Pjax from '..';\nimport Submission, { SubmitButton } from '../libs/Submission';\n\ntype Link = HTMLAnchorElement | HTMLAreaElement;\n\n/**\n * Get the target browsing context chosen by anchors or forms\n * @see [The rules for choosing a browsing context | HTML Standard]{@link https://html.spec.whatwg.org/multipage/browsers.html#the-rules-for-choosing-a-browsing-context-given-a-browsing-context-name}\n */\nconst getBrowsingContext = (target: string) => {\n  if (target === window.name) return window;\n  switch (target.toLowerCase()) {\n    case '':\n    case '_self':\n      return window;\n    case '_parent':\n      return window.parent;\n    case '_top':\n      return window.top;\n    default:\n      return undefined;\n  }\n};\n\nexport default class DefaultTrigger {\n  declare pjax: Pjax;\n\n  constructor(pjax: Pjax) {\n    this.pjax = pjax;\n  }\n\n  /**\n   * Check if the current trigger options apply to the element.\n   */\n  test(element: Element): boolean {\n    const { defaultTrigger } = this.pjax.options;\n    if (typeof defaultTrigger === 'boolean') return defaultTrigger;\n    const { enable, exclude } = defaultTrigger;\n    return enable !== false && (!exclude || !element.matches(exclude));\n  }\n\n  /**\n   * Load a resource with element attribute support.\n   * @see [Follow the hyperlink | HTML Standard]{@link https://html.spec.whatwg.org/multipage/links.html#following-hyperlinks-2}\n   * @see [Plan to navigate | HTML Standard]{@link https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plan-to-navigate}\n   */\n  load(\n    resource: RequestInfo,\n    subject: Link | HTMLFormElement,\n  ): void {\n    /**\n     * The RequestInit to align the request to send by the element.\n     */\n    const requestInit: RequestInit = {};\n\n    /**\n     * Referrer policy that specified on the element.\n     * Will cause a TypeError in the later Request constructing step if the attribute is invalid.\n     * Not bypassing forms here as it is supposed to be supported in the future.\n     * @see [Add referrerpolicy to &lt;form&gt; · whatwg/html]{@link https://github.com/whatwg/html/issues/4320}\n     */\n    const referrerPolicy = subject.getAttribute('referrerpolicy')?.toLowerCase();\n    if (referrerPolicy !== undefined) requestInit.referrerPolicy = referrerPolicy as ReferrerPolicy;\n\n    /**\n     * Use no referrer if specified in the link types.\n     * Not reading from `.relList` here as browsers haven't shipped it for forms yet.\n     * @see [Add &lt;form rel&gt; initial compat data · mdn/browser-compat-data]{@link https://github.com/mdn/browser-compat-data/pull/9130}\n     */\n    if (subject.getAttribute('rel')?.split(/\\s+/)\n      .some((type) => type.toLowerCase() === 'noreferrer')) {\n      requestInit.referrer = '';\n    }\n\n    this.pjax.load(new Request(resource, requestInit)).catch(() => {});\n  }\n\n  onLinkOpen(event: Event): void {\n    if (event.defaultPrevented) return;\n\n    const { target } = event;\n    if (!(target instanceof Element)) return;\n\n    const link: Link | null = target.closest('a[href], area[href]');\n    if (!link) return;\n\n    if (!this.test(link)) return;\n\n    if (event instanceof MouseEvent || event instanceof KeyboardEvent) {\n      if (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n    }\n\n    if (getBrowsingContext(link.target) !== window) return;\n\n    // External.\n    if (link.origin !== window.location.origin) return;\n\n    event.preventDefault();\n\n    this.load(link.href, link);\n  }\n\n  onFormSubmit(event: SubmitEvent): void {\n    if (event.defaultPrevented) return;\n\n    const { target: form, submitter } = event;\n    if (!(form instanceof HTMLFormElement)) return;\n\n    if (!this.test(form)) return;\n\n    const submission = new Submission(form, submitter as SubmitButton | null);\n\n    if (getBrowsingContext(submission.getAttribute('target')) !== window) return;\n\n    const requestInfo = submission.getRequestInfo();\n    if (!requestInfo) return;\n\n    const url = new URL(typeof requestInfo === 'string' ? requestInfo : requestInfo.url);\n\n    // External.\n    if (url.origin !== window.location.origin) return;\n\n    event.preventDefault();\n\n    this.load(requestInfo, form);\n  }\n\n  register(): void {\n    document.addEventListener('click', (event) => {\n      this.onLinkOpen(event);\n    });\n    document.addEventListener('keyup', (event) => {\n      if (event.key !== 'Enter') return;\n      this.onLinkOpen(event);\n    });\n\n    // Lacking browser compatibility and small polyfill. - August 2, 2021\n    if ('SubmitEvent' in window) {\n      document.addEventListener('submit', (event) => {\n        this.onFormSubmit(event);\n      });\n    }\n  }\n}\n","/**\n * Follow\n * https://html.spec.whatwg.org/multipage/scripting.html#prepare-a-script\n * excluding steps concerning obsoleted attributes.\n */\n\n/**\n * Regex for JavaScript MIME type strings.\n * @see [JavaScript MIME type | MIME Sniffing Standard]{@link https://mimesniff.spec.whatwg.org/#javascript-mime-type}\n */\nexport const MIMETypeRegex = /^((application|text)\\/(x-)?(ecma|java)script|text\\/(javascript1\\.[0-5]|(j|live)script))$/;\n\nexport default class Script {\n  declare target: HTMLScriptElement;\n\n  declare type?: 'classic' | 'module';\n\n  external = false;\n\n  blocking = false;\n\n  evaluable = false;\n\n  constructor(scriptEle: HTMLScriptElement) {\n    this.target = scriptEle;\n\n    // Process empty.\n    if (!scriptEle.hasAttribute('src') && !scriptEle.text) return;\n\n    // Process type.\n    const typeString = scriptEle.type ? scriptEle.type.trim().toLowerCase() : 'text/javascript';\n    if (MIMETypeRegex.test(typeString)) {\n      this.type = 'classic';\n    } else if (typeString === 'module') {\n      this.type = 'module';\n    } else {\n      return;\n    }\n\n    // Process no module.\n    if (scriptEle.noModule && this.type === 'classic') {\n      return;\n    }\n\n    // Process external.\n    if (scriptEle.src) {\n      this.external = true;\n    }\n\n    // Process blocking.\n    // It's minifier plugins' job to merge conditions. We split them out for readability.\n    this.blocking = true;\n    if (this.type !== 'classic') {\n      this.blocking = false;\n    } else if (this.external) {\n      /**\n       * The async IDL attribute may not reflect the async content attribute.\n       * @see [The async IDL attribute | HTML Standard]{@link https://html.spec.whatwg.org/multipage/scripting.html#dom-script-async}\n       */\n      if (scriptEle.hasAttribute('async')) {\n        this.blocking = false;\n      } else if (scriptEle.defer) {\n        this.blocking = false;\n      }\n    }\n\n    this.evaluable = true;\n  }\n\n  eval(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const oldEle = this.target;\n      const newEle = document.createElement('script');\n\n      newEle.addEventListener('error', reject);\n\n      /**\n       * Clone attributes and inner text.\n       * Reset async since it defaults to true on dynamically created scripts.\n       */\n      newEle.async = false;\n      oldEle.getAttributeNames().forEach((name) => {\n        newEle.setAttribute(name, oldEle.getAttribute(name) || '');\n      });\n      newEle.text = oldEle.text;\n\n      /**\n       * Execute.\n       * Not using `.isConnected` here as it is also `true`\n       * for scripts connected in other documents.\n       */\n      if (document.contains(oldEle)) {\n        oldEle.replaceWith(newEle);\n      } else {\n        // Execute in <head> if it's not in current document.\n        document.head.append(newEle);\n        if (this.external) {\n          newEle.addEventListener('load', () => newEle.remove());\n        } else {\n          newEle.remove();\n        }\n      }\n\n      if (this.external) {\n        newEle.addEventListener('load', () => resolve());\n      } else {\n        resolve();\n      }\n    });\n  }\n}\n","import LazyHistory from './libs/LazyHistory';\n\nimport Switches from './utils/Switches';\nimport DefaultTrigger from './utils/DefaultTrigger';\n\nimport switchDOM from './switchDOM';\nimport preparePage from './preparePage';\nimport weakLoad from './weakLoad';\n\nexport type Switch<T extends Element = Element>\n  = (oldEle: T, newEle: T) => (Promise<void> | void);\n\nexport type Hook<T> = (input: T) => T | void | Promise<T | void>;\n\nexport interface Hooks {\n  request?: Hook<Request>;\n  response?: Hook<Response>;\n  document?: Hook<Document>;\n  switchesResult?: Hook<SwitchesResult>;\n}\n\nexport interface TriggerOptions {\n  enable?: boolean,\n  exclude?: string,\n}\n\nexport interface Options {\n  defaultTrigger: boolean | TriggerOptions,\n  selectors: string[],\n  switches: Record<string, Switch>,\n  scripts: string,\n  scrollTo: number | [number, number] | boolean,\n  scrollRestoration: boolean,\n  cache: RequestCache,\n  timeout: number,\n  hooks: Hooks,\n}\n\nexport interface SwitchesResult {\n  focusCleared: boolean;\n}\n\ninterface State {\n  scrollPos: [number, number];\n}\n\nexport interface History {\n  state: State | null;\n  pull(): void;\n}\n\nexport interface EventDetail {\n  signal?: AbortSignal | null;\n  request?: Request;\n  response?: Response;\n  timeout?: Options['timeout'];\n  timeoutID?: number;\n  switches?: Options['switches'];\n  switchesResult?: SwitchesResult;\n  error?: unknown;\n}\n\nclass Pjax {\n  static switches = Switches;\n\n  static reload(): void {\n    window.location.reload();\n  }\n\n  /**\n   * Options default values.\n   */\n  readonly options: Options = {\n    defaultTrigger: true,\n    selectors: ['title', '.pjax'],\n    switches: {},\n    scripts: 'script[data-pjax]',\n    scrollTo: true,\n    scrollRestoration: true,\n    cache: 'default',\n    timeout: 0,\n    hooks: {},\n  };\n\n  readonly history: History = new LazyHistory('pjax');\n\n  readonly location = new URL(window.location.href);\n\n  /**\n   * Pjax navigation abort controller.\n   */\n  abortController: AbortController | null = null;\n\n  constructor(options: Partial<Options> = {}) {\n    Object.assign(this.options, options);\n\n    if (this.options.scrollRestoration) {\n      window.history.scrollRestoration = 'manual';\n\n      // Browsers' own restoration is faster and more stable on reload.\n      window.addEventListener('beforeunload', () => {\n        window.history.scrollRestoration = 'auto';\n      });\n    }\n\n    const { defaultTrigger } = this.options;\n    if (defaultTrigger === true || (defaultTrigger !== false && defaultTrigger.enable !== false)) {\n      new DefaultTrigger(this).register();\n    }\n\n    window.addEventListener('popstate', (event) => {\n      /**\n       * The main reason why we write the LazyHistory library is right here:\n       * `window.history.state` is ALREADY changed on popstate events and\n       * we can't update the previous state anymore. (For scroll position, etc.)\n       * As continuously updating `window.history.state` causes performance issues,\n       * using a custom library seems to be the only choice.\n       */\n\n      // Store scroll position and then update the lazy state.\n      this.storeHistory();\n      this.history.pull();\n\n      // hashchange events trigger popstate with a null `event.state`.\n      if (event.state === null) return;\n\n      const overrideOptions: Partial<Options> = {};\n      if (this.options.scrollRestoration && this.history.state) {\n        overrideOptions.scrollTo = this.history.state.scrollPos;\n      }\n\n      this.load(window.location.href, overrideOptions).catch(() => {});\n    });\n  }\n\n  storeHistory(): void {\n    this.history.state = {\n      scrollPos: [window.scrollX, window.scrollY],\n    };\n  }\n\n  /**\n   * Fire Pjax related events.\n   */\n  fire(type: 'send' | 'receive' | 'error' | 'success' | 'complete', detail: EventDetail): void {\n    const event = new CustomEvent(`pjax:${type}`, {\n      bubbles: true,\n      cancelable: false,\n      detail: {\n        abortController: this.abortController,\n        ...detail,\n      },\n    });\n    document.dispatchEvent(event);\n  }\n\n  switchDOM: (\n    requestInfo: RequestInfo,\n    overrideOptions?: Partial<Options>\n  ) => Promise<void> = switchDOM;\n\n  preparePage: (\n    switchesResult: SwitchesResult | null,\n    overrideOptions?: Partial<Options>\n  ) => Promise<void> = preparePage;\n\n  weakLoad: (\n    requestInfo: RequestInfo,\n    overrideOptions?: Partial<Options>\n  ) => Promise<void> = weakLoad;\n\n  /**\n   * Load a URL in Pjax way. Navigate normally on errors except AbortError.\n   */\n  async load(requestInfo: RequestInfo, overrideOptions: Partial<Options> = {}): Promise<void> {\n    try {\n      await this.weakLoad(requestInfo, overrideOptions);\n    } catch (e) {\n      if (e instanceof DOMException && e.name === 'AbortError') throw e;\n      window.location.assign(typeof requestInfo === 'string' ? requestInfo : requestInfo.url);\n    }\n  }\n}\n\nexport default Pjax;\n"],"names":["switchNodes","sourceDocument","selectors","switches","signal","aborted","DOMException","focusCleared","forEach","selector","sourceNodeList","length","targetNodeList","activeElement","document","targetNode","index","contains","HTMLElement","SVGElement","blur","catch","switchPromises","push","switchPromise","Promise","race","all","resolve","reject","addEventListener","switchDOM","requestInfo","overrideOptions","cache","timeout","hooks","options","_this$abortController","eventDetail","Request","requestInit","referrer","referrerPolicy","rawRequest","headers","set","JSON","stringify","request","timeoutID","window","setTimeout","abortController","abort","fire","finally","clearTimeout","rawResponse","response","newLocation","hash","URL","url","location","href","history","pushState","rawDocument","rawSwitchesResult","switchesResult","preparePage","error","executeScripts","scriptEleList","scriptEle","filter","promise","script","external","executor","exec","then","execution","autofocus","focus","scripts","querySelectorAll","element","HTMLScriptElement","includes","sort","a","b","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","scrollTo","parsedScrollTo","Array","isArray","scrollX","target","scrollIntoView","weakLoad","storeHistory","pull","LazyHistory","constructor","key","undefined","pulledIndex","stateList","state","sessionStorage","setItem","replaceState","historyState","title","stateListStr","newNode","oldNode","replaceWith","default","innerHTML","textContent","innerText","newEle","oldEle","attributes","existingNames","getAttributeNames","targetNames","setAttribute","getAttribute","existing","removeAttribute","Submission","form","submitter","submitButton","name","hasAttribute","toUpperCase","overrideValue","getEntryList","disabled","formData","append","value","getNameValuePairs","from","File","getURLSearchParams","URLSearchParams","getTextPlain","reduce","str","getRequestInfo","test","actionURL","protocol","search","toString","body","action","method","toLowerCase","parent","top","DefaultTrigger","pjax","defaultTrigger","enable","exclude","matches","load","resource","subject","_subject$getAttribute2","split","some","type","onLinkOpen","event","defaultPrevented","Element","link","MouseEvent","KeyboardEvent","metaKey","ctrlKey","shiftKey","altKey","getBrowsingContext","origin","preventDefault","onFormSubmit","HTMLFormElement","submission","register","Script","evaluable","blocking","text","MIMETypeRegex","typeString","noModule","src","defer","eval","async","head","remove","Executor","_this$signal","evalPromise","hashId","decodeURIComponent","slice","getElementById","getElementsByName","scrollingElement","Pjax","reload","scrollRestoration","Object","assign","scrollPos","scrollY","detail","bubbles","cancelable","dispatchEvent","e","Switches"],"mappings":"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"}